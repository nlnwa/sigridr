// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

package sigridr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Label struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Label) Reset()                    { *m = Label{} }
func (m *Label) String() string            { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()               {}
func (*Label) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Label) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Label) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Meta struct {
	Name           string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description    string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Created        *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=created" json:"created,omitempty"`
	CreatedBy      string                      `protobuf:"bytes,4,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	LastModified   *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	LastModifiedBy string                      `protobuf:"bytes,6,opt,name=last_modified_by,json=lastModifiedBy" json:"last_modified_by,omitempty"`
	Label          []*Label                    `protobuf:"bytes,7,rep,name=label" json:"label,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Meta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Meta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Meta) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Meta) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Meta) GetLastModified() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Meta) GetLastModifiedBy() string {
	if m != nil {
		return m.LastModifiedBy
	}
	return ""
}

func (m *Meta) GetLabel() []*Label {
	if m != nil {
		return m.Label
	}
	return nil
}

type Entity struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta *Meta  `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Entity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Entity) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Job struct {
	Id             string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta           *Meta                       `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	CronExpression string                      `protobuf:"bytes,3,opt,name=cron_expression,json=cronExpression" json:"cron_expression,omitempty"`
	ValidFrom      *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=valid_from,json=validFrom" json:"valid_from,omitempty"`
	ValidTo        *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=valid_to,json=validTo" json:"valid_to,omitempty"`
	Disabled       bool                        `protobuf:"varint,15,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Job) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

func (m *Job) GetValidFrom() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *Job) GetValidTo() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

func (m *Job) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type Seed struct {
	Id       string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta     *Meta    `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	EntityId string   `protobuf:"bytes,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	JobId    []string `protobuf:"bytes,4,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
	Disabled bool     `protobuf:"varint,15,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *Seed) Reset()                    { *m = Seed{} }
func (m *Seed) String() string            { return proto.CompactTextString(m) }
func (*Seed) ProtoMessage()               {}
func (*Seed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Seed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Seed) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Seed) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *Seed) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *Seed) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type SearchParameters struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Query   string `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	MaxId   string `protobuf:"bytes,4,opt,name=max_id,json=maxId" json:"max_id,omitempty"`
	SinceId string `protobuf:"bytes,5,opt,name=since_id,json=sinceId" json:"since_id,omitempty"`
}

func (m *SearchParameters) Reset()                    { *m = SearchParameters{} }
func (m *SearchParameters) String() string            { return proto.CompactTextString(m) }
func (*SearchParameters) ProtoMessage()               {}
func (*SearchParameters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SearchParameters) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchParameters) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchParameters) GetMaxId() string {
	if m != nil {
		return m.MaxId
	}
	return ""
}

func (m *SearchParameters) GetSinceId() string {
	if m != nil {
		return m.SinceId
	}
	return ""
}

type QueuedSeed struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Seq        int32             `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Ref        string            `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`
	SeedId     string            `protobuf:"bytes,4,opt,name=seed_id,json=seedId" json:"seed_id,omitempty"`
	Parameters *SearchParameters `protobuf:"bytes,5,opt,name=parameters" json:"parameters,omitempty"`
}

func (m *QueuedSeed) Reset()                    { *m = QueuedSeed{} }
func (m *QueuedSeed) String() string            { return proto.CompactTextString(m) }
func (*QueuedSeed) ProtoMessage()               {}
func (*QueuedSeed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *QueuedSeed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueuedSeed) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueuedSeed) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *QueuedSeed) GetSeedId() string {
	if m != nil {
		return m.SeedId
	}
	return ""
}

func (m *QueuedSeed) GetParameters() *SearchParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type RateLimit struct {
	Limit     int32                       `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Remaining int32                       `protobuf:"varint,2,opt,name=remaining" json:"remaining,omitempty"`
	Reset_    *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=reset" json:"reset,omitempty"`
}

func (m *RateLimit) Reset()                    { *m = RateLimit{} }
func (m *RateLimit) String() string            { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()               {}
func (*RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *RateLimit) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RateLimit) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *RateLimit) GetReset_() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Reset_
	}
	return nil
}

func init() {
	proto.RegisterType((*Label)(nil), "sigridr.Label")
	proto.RegisterType((*Meta)(nil), "sigridr.Meta")
	proto.RegisterType((*Entity)(nil), "sigridr.Entity")
	proto.RegisterType((*Job)(nil), "sigridr.Job")
	proto.RegisterType((*Seed)(nil), "sigridr.Seed")
	proto.RegisterType((*SearchParameters)(nil), "sigridr.SearchParameters")
	proto.RegisterType((*QueuedSeed)(nil), "sigridr.QueuedSeed")
	proto.RegisterType((*RateLimit)(nil), "sigridr.RateLimit")
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xe3, 0x38, 0x3f, 0x93, 0xfe, 0x44, 0xab, 0x22, 0xdc, 0x00, 0x22, 0x58, 0x48, 0xe4,
	0x94, 0xa2, 0x02, 0x07, 0xc4, 0x01, 0xa9, 0x52, 0x91, 0x82, 0x5a, 0x09, 0xdc, 0xde, 0xa3, 0xb5,
	0x77, 0x92, 0x6e, 0xf1, 0x7a, 0xd3, 0xdd, 0x4d, 0x55, 0x3f, 0x02, 0x77, 0x9e, 0x80, 0x17, 0xe4,
	0x15, 0xd0, 0xae, 0xb7, 0x69, 0x28, 0xa8, 0x54, 0xbd, 0xcd, 0x7c, 0xf3, 0xcd, 0xce, 0x7c, 0xdf,
	0xd8, 0xb0, 0xa1, 0xf3, 0x33, 0x14, 0x74, 0xbc, 0x50, 0xd2, 0x48, 0xd2, 0xd6, 0x7c, 0xae, 0x38,
	0x53, 0x83, 0xe7, 0x73, 0x29, 0xe7, 0x05, 0xee, 0x39, 0x38, 0x5b, 0xce, 0xf6, 0x0c, 0x17, 0xa8,
	0x0d, 0x15, 0x8b, 0x9a, 0x39, 0xd8, 0xbd, 0x4d, 0xa0, 0x65, 0x55, 0x97, 0x92, 0x3d, 0x88, 0x8e,
	0x68, 0x86, 0x05, 0xe9, 0x43, 0xf8, 0x0d, 0xab, 0x38, 0x18, 0x06, 0xa3, 0x6e, 0x6a, 0x43, 0xb2,
	0x03, 0xd1, 0x25, 0x2d, 0x96, 0x18, 0x37, 0x1c, 0x56, 0x27, 0xc9, 0xcf, 0x06, 0x34, 0x8f, 0xd1,
	0x50, 0x42, 0xa0, 0x59, 0x52, 0x81, 0xbe, 0xc3, 0xc5, 0x64, 0x08, 0x3d, 0x86, 0x3a, 0x57, 0x7c,
	0x61, 0xb8, 0x2c, 0x7d, 0xe3, 0x3a, 0x44, 0xde, 0x42, 0x3b, 0x57, 0x48, 0x0d, 0xb2, 0x38, 0x1c,
	0x06, 0xa3, 0xde, 0xfe, 0x60, 0x5c, 0x2f, 0x37, 0xbe, 0x5e, 0x6e, 0x7c, 0x7a, 0xbd, 0x7d, 0x7a,
	0x4d, 0x25, 0xcf, 0x00, 0x7c, 0x38, 0xcd, 0xaa, 0xb8, 0xe9, 0x9e, 0xed, 0x7a, 0xe4, 0xa0, 0x22,
	0x1f, 0x61, 0xb3, 0xa0, 0xda, 0x4c, 0x85, 0x64, 0x7c, 0xc6, 0x91, 0xc5, 0xd1, 0x7f, 0x9f, 0xde,
	0xb0, 0x0d, 0xc7, 0x9e, 0x4f, 0x46, 0xd0, 0xff, 0xe3, 0x01, 0x3b, 0xa5, 0xe5, 0xa6, 0x6c, 0xad,
	0xf3, 0x0e, 0x2a, 0xf2, 0x12, 0xa2, 0xc2, 0xfa, 0x15, 0xb7, 0x87, 0xe1, 0xa8, 0xb7, 0xbf, 0x35,
	0xf6, 0x47, 0x18, 0x3b, 0x17, 0xd3, 0xba, 0x98, 0x7c, 0x80, 0xd6, 0x61, 0x69, 0xb8, 0xa9, 0xc8,
	0x16, 0x34, 0x38, 0xf3, 0x1e, 0x35, 0x38, 0x23, 0x2f, 0xa0, 0x29, 0xd0, 0x50, 0x67, 0x4d, 0x6f,
	0x7f, 0x73, 0xd5, 0x6e, 0x2d, 0x4d, 0x5d, 0x29, 0xf9, 0x15, 0x40, 0xf8, 0x59, 0x66, 0x0f, 0x68,
	0x25, 0xaf, 0x60, 0x3b, 0x57, 0xb2, 0x9c, 0xe2, 0xd5, 0x42, 0xa1, 0xd6, 0xf6, 0x06, 0x61, 0x2d,
	0xc3, 0xc2, 0x87, 0x2b, 0x94, 0xbc, 0x07, 0xb8, 0xa4, 0x05, 0x67, 0xd3, 0x99, 0x92, 0xc2, 0x19,
	0x7a, 0xb7, 0x5d, 0x5d, 0xc7, 0xfe, 0xa4, 0xa4, 0x20, 0xef, 0xa0, 0x53, 0xb7, 0x1a, 0x79, 0x0f,
	0x9f, 0xdb, 0x8e, 0x7b, 0x2a, 0xc9, 0x00, 0x3a, 0x8c, 0x6b, 0x9a, 0x15, 0xc8, 0xe2, 0xed, 0x61,
	0x30, 0xea, 0xa4, 0xab, 0x3c, 0xf9, 0x1e, 0x40, 0xf3, 0x04, 0x91, 0x3d, 0x44, 0xf2, 0x13, 0xe8,
	0xa2, 0xb3, 0x7a, 0xca, 0x99, 0x17, 0xdb, 0xa9, 0x81, 0x09, 0x23, 0x8f, 0xa0, 0x75, 0x2e, 0x33,
	0x5b, 0x69, 0x0e, 0x43, 0xfb, 0x0d, 0x9f, 0xcb, 0x6c, 0xc2, 0xee, 0xdc, 0xe5, 0x1c, 0xfa, 0x27,
	0x48, 0x55, 0x7e, 0xf6, 0x85, 0x2a, 0x2a, 0xd0, 0xa0, 0xd2, 0x7f, 0xad, 0xb5, 0x03, 0xd1, 0xc5,
	0x12, 0x55, 0xe5, 0xe7, 0xd5, 0x89, 0x1d, 0x26, 0xe8, 0x55, 0x3d, 0xcc, 0xc1, 0x82, 0x5e, 0x4d,
	0x18, 0xd9, 0x85, 0x8e, 0xe6, 0x65, 0x8e, 0xb6, 0x10, 0xb9, 0x42, 0xdb, 0xe5, 0x13, 0x96, 0xfc,
	0x08, 0x00, 0xbe, 0x2e, 0x71, 0x89, 0xec, 0x9f, 0xea, 0xfb, 0x10, 0x6a, 0xbc, 0x70, 0xe2, 0xa3,
	0xd4, 0x86, 0x16, 0x51, 0x38, 0xf3, 0x63, 0x6d, 0x48, 0x1e, 0x43, 0x5b, 0x23, 0xb2, 0x9b, 0xa9,
	0x2d, 0x9b, 0x4e, 0x98, 0xbd, 0xf0, 0x62, 0xa5, 0xc0, 0x1f, 0x6a, 0x77, 0x65, 0xe0, 0x6d, 0x89,
	0xe9, 0x1a, 0x39, 0xb9, 0x80, 0x6e, 0x4a, 0x0d, 0x1e, 0x71, 0xc1, 0x8d, 0xd5, 0x5a, 0xd8, 0xc0,
	0xed, 0x15, 0xa5, 0x75, 0x42, 0x9e, 0x42, 0x57, 0xa1, 0xa0, 0xbc, 0xe4, 0xe5, 0xdc, 0x2f, 0x78,
	0x03, 0x90, 0xd7, 0x10, 0x29, 0xd4, 0x68, 0xee, 0xf1, 0x8b, 0xd7, 0xc4, 0xac, 0xe5, 0x4a, 0x6f,
	0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x86, 0x2f, 0xa7, 0xe2, 0x04, 0x00, 0x00,
}
