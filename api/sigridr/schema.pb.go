// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

package sigridr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Meta struct {
	Name           string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description    string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	CreateTime     *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=create_time" json:"create_time,omitempty"`
	CreatedBy      string                      `protobuf:"bytes,4,opt,name=created_by" json:"created_by,omitempty"`
	UpdateTime     *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=update_time" json:"update_time,omitempty"`
	LastModifiedBy string                      `protobuf:"bytes,6,opt,name=last_modified_by" json:"last_modified_by,omitempty"`
	Labels         map[string]string           `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Meta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Meta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Meta) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Meta) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Meta) GetUpdateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Meta) GetLastModifiedBy() string {
	if m != nil {
		return m.LastModifiedBy
	}
	return ""
}

func (m *Meta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Entity struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta *Meta  `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Entity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Entity) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Job struct {
	Id             string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta           *Meta                       `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	CronExpression string                      `protobuf:"bytes,3,opt,name=cron_expression" json:"cron_expression,omitempty"`
	ValidFrom      *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=valid_from" json:"valid_from,omitempty"`
	ValidTo        *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=valid_to" json:"valid_to,omitempty"`
	Disabled       bool                        `protobuf:"varint,15,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Job) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

func (m *Job) GetValidFrom() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *Job) GetValidTo() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

func (m *Job) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type Seed struct {
	Id       string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta     *Meta    `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	EntityId string   `protobuf:"bytes,3,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	JobId    []string `protobuf:"bytes,4,rep,name=job_id,json=jobId" json:"job_id,omitempty"`
	Disabled bool     `protobuf:"varint,15,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *Seed) Reset()                    { *m = Seed{} }
func (m *Seed) String() string            { return proto.CompactTextString(m) }
func (*Seed) ProtoMessage()               {}
func (*Seed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Seed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Seed) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Seed) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *Seed) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *Seed) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type SearchParameters struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Query   string `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	MaxId   string `protobuf:"bytes,4,opt,name=max_id" json:"max_id,omitempty"`
	SinceId string `protobuf:"bytes,5,opt,name=since_id" json:"since_id,omitempty"`
}

func (m *SearchParameters) Reset()                    { *m = SearchParameters{} }
func (m *SearchParameters) String() string            { return proto.CompactTextString(m) }
func (*SearchParameters) ProtoMessage()               {}
func (*SearchParameters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SearchParameters) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchParameters) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchParameters) GetMaxId() string {
	if m != nil {
		return m.MaxId
	}
	return ""
}

func (m *SearchParameters) GetSinceId() string {
	if m != nil {
		return m.SinceId
	}
	return ""
}

type QueuedSeed struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Seq        int32             `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Ref        string            `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`
	SeedId     string            `protobuf:"bytes,4,opt,name=seed_id" json:"seed_id,omitempty"`
	Parameters *SearchParameters `protobuf:"bytes,5,opt,name=parameters" json:"parameters,omitempty"`
}

func (m *QueuedSeed) Reset()                    { *m = QueuedSeed{} }
func (m *QueuedSeed) String() string            { return proto.CompactTextString(m) }
func (*QueuedSeed) ProtoMessage()               {}
func (*QueuedSeed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *QueuedSeed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueuedSeed) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueuedSeed) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *QueuedSeed) GetSeedId() string {
	if m != nil {
		return m.SeedId
	}
	return ""
}

func (m *QueuedSeed) GetParameters() *SearchParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type RateLimit struct {
	Limit     int32                       `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Remaining int32                       `protobuf:"varint,2,opt,name=remaining" json:"remaining,omitempty"`
	Reset_    *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=reset" json:"reset,omitempty"`
}

func (m *RateLimit) Reset()                    { *m = RateLimit{} }
func (m *RateLimit) String() string            { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()               {}
func (*RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *RateLimit) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RateLimit) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *RateLimit) GetReset_() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Reset_
	}
	return nil
}

func init() {
	proto.RegisterType((*Meta)(nil), "sigridr.Meta")
	proto.RegisterType((*Entity)(nil), "sigridr.Entity")
	proto.RegisterType((*Job)(nil), "sigridr.Job")
	proto.RegisterType((*Seed)(nil), "sigridr.Seed")
	proto.RegisterType((*SearchParameters)(nil), "sigridr.SearchParameters")
	proto.RegisterType((*QueuedSeed)(nil), "sigridr.QueuedSeed")
	proto.RegisterType((*RateLimit)(nil), "sigridr.RateLimit")
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0x9a, 0xa6, 0x6b, 0x4f, 0x81, 0x55, 0xd6, 0x40, 0x59, 0x41, 0x50, 0x7a, 0x55, 0x71,
	0x91, 0xc1, 0x90, 0x10, 0x1b, 0xdc, 0xee, 0x62, 0x68, 0x48, 0x90, 0x71, 0x5f, 0x39, 0xf1, 0x69,
	0xe7, 0x91, 0xc4, 0x99, 0xed, 0x4c, 0xcb, 0x23, 0xf0, 0x00, 0xbc, 0xe8, 0x9e, 0x00, 0xd9, 0x4e,
	0xbb, 0xd0, 0xa1, 0x31, 0xed, 0xee, 0x7c, 0xdf, 0xf9, 0x7c, 0xbe, 0xf3, 0x13, 0x05, 0x1e, 0xa9,
	0xf4, 0x0c, 0x73, 0x1a, 0x95, 0x52, 0x68, 0x41, 0xb6, 0x14, 0x5f, 0x4a, 0xce, 0xe4, 0xf8, 0xd5,
	0x52, 0x88, 0x65, 0x86, 0x7b, 0x96, 0x4e, 0xaa, 0xc5, 0x9e, 0xe6, 0x39, 0x2a, 0x4d, 0xf3, 0xd2,
	0x29, 0xc7, 0xbb, 0x9b, 0x02, 0x5a, 0xd4, 0x2e, 0x35, 0xbd, 0xee, 0x40, 0xf7, 0x2b, 0x6a, 0x4a,
	0x08, 0x74, 0x0b, 0x9a, 0x63, 0xe8, 0x4d, 0xbc, 0xd9, 0x20, 0xb6, 0x31, 0x99, 0xc0, 0x90, 0xa1,
	0x4a, 0x25, 0x2f, 0x35, 0x17, 0x45, 0xd8, 0xb1, 0xa9, 0x36, 0x45, 0x3e, 0xc3, 0x30, 0x95, 0x48,
	0x35, 0xce, 0x8d, 0x67, 0xe8, 0x4f, 0xbc, 0xd9, 0x70, 0x7f, 0x1c, 0x39, 0xbf, 0x68, 0xe5, 0x17,
	0xfd, 0x58, 0x35, 0x14, 0xb7, 0xe5, 0xe4, 0x25, 0x80, 0x83, 0x6c, 0x9e, 0xd4, 0x61, 0xd7, 0x96,
	0x6f, 0x31, 0xa6, 0x7a, 0x55, 0xb2, 0x75, 0xf5, 0xe0, 0xff, 0xd5, 0x5b, 0x72, 0xf2, 0x06, 0x46,
	0x19, 0x55, 0x7a, 0x9e, 0x0b, 0xc6, 0x17, 0xdc, 0x79, 0xf4, 0xac, 0xc7, 0x2d, 0x9e, 0xbc, 0x83,
	0x5e, 0x46, 0x13, 0xcc, 0x54, 0xb8, 0x35, 0xf1, 0x67, 0xc3, 0xfd, 0xdd, 0xa8, 0x59, 0x6e, 0x64,
	0x96, 0x13, 0x9d, 0xd8, 0xdc, 0x51, 0xa1, 0x65, 0x1d, 0x37, 0xc2, 0xf1, 0x01, 0x0c, 0x5b, 0x34,
	0x19, 0x81, 0xff, 0x13, 0xeb, 0x66, 0x7d, 0x26, 0x24, 0x3b, 0x10, 0x5c, 0xd2, 0xac, 0xc2, 0x66,
	0x6f, 0x0e, 0x1c, 0x76, 0x3e, 0x7a, 0xd3, 0x4f, 0xd0, 0x3b, 0x2a, 0x34, 0xd7, 0x35, 0x79, 0x02,
	0x1d, 0xce, 0x9a, 0x47, 0x1d, 0xce, 0xc8, 0x6b, 0xe8, 0xe6, 0xa8, 0xa9, 0x7d, 0x32, 0xdc, 0x7f,
	0xfc, 0x57, 0x17, 0xb1, 0x4d, 0x4d, 0xaf, 0x3d, 0xf0, 0xbf, 0x88, 0xe4, 0x01, 0x4f, 0xc9, 0x0c,
	0xb6, 0x53, 0x29, 0x8a, 0x39, 0x5e, 0x95, 0x12, 0x95, 0x32, 0x37, 0xf5, 0xed, 0xfb, 0x4d, 0x9a,
	0x1c, 0x02, 0x5c, 0xd2, 0x8c, 0xb3, 0xf9, 0x42, 0x8a, 0xdc, 0x5e, 0xe6, 0xee, 0xc5, 0xb7, 0xd4,
	0xe4, 0x03, 0xf4, 0x1d, 0xd2, 0xe2, 0x1e, 0x27, 0x5b, 0x6b, 0xc9, 0x18, 0xfa, 0x8c, 0x2b, 0x9a,
	0x64, 0xc8, 0xc2, 0xed, 0x89, 0x37, 0xeb, 0xc7, 0x6b, 0x3c, 0xfd, 0xe5, 0x41, 0xf7, 0x14, 0x91,
	0x3d, 0x64, 0xea, 0xe7, 0x30, 0x40, 0xbb, 0xed, 0x39, 0x67, 0xcd, 0xbc, 0x7d, 0x47, 0x1c, 0x33,
	0xf2, 0x14, 0x7a, 0xe7, 0x22, 0x31, 0x99, 0xee, 0xc4, 0x37, 0x57, 0x3a, 0x17, 0xc9, 0x31, 0xbb,
	0xb3, 0x97, 0x0c, 0x46, 0xa7, 0x48, 0x65, 0x7a, 0xf6, 0x8d, 0x4a, 0x9a, 0xa3, 0x46, 0xa9, 0x6e,
	0xb5, 0xb5, 0x03, 0xc1, 0x45, 0x85, 0xb2, 0x6e, 0xfc, 0x1c, 0x20, 0xcf, 0xa0, 0x97, 0xd3, 0x2b,
	0x67, 0x66, 0xe8, 0x06, 0x19, 0x37, 0xc5, 0x8b, 0x14, 0x4d, 0x26, 0x70, 0x0d, 0xae, 0xf0, 0xf4,
	0xb7, 0x07, 0xf0, 0xbd, 0xc2, 0x0a, 0xd9, 0x3f, 0xe7, 0x1f, 0x81, 0xaf, 0xf0, 0xc2, 0x8e, 0x1f,
	0xc4, 0x26, 0x34, 0x8c, 0xc4, 0x45, 0x63, 0x6c, 0x42, 0x12, 0xc2, 0x96, 0x42, 0x64, 0x37, 0xbe,
	0x2b, 0x48, 0x0e, 0x00, 0xca, 0xf5, 0x10, 0xcd, 0xb1, 0x6e, 0x3e, 0xfd, 0xcd, 0x29, 0xe3, 0x96,
	0x78, 0x7a, 0x01, 0x83, 0x98, 0x6a, 0x3c, 0xe1, 0x39, 0xd7, 0x66, 0xdc, 0xcc, 0x04, 0xb6, 0xb1,
	0x20, 0x76, 0x80, 0xbc, 0x80, 0x81, 0xc4, 0x9c, 0xf2, 0x82, 0x17, 0xcb, 0xa6, 0xc3, 0x1b, 0x82,
	0xbc, 0x85, 0x40, 0xa2, 0x42, 0x7d, 0x8f, 0x9f, 0x86, 0x13, 0x26, 0x3d, 0x9b, 0x7a, 0xff, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x57, 0x1f, 0xf5, 0x70, 0x07, 0x05, 0x00, 0x00,
}
